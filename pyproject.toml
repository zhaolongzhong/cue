[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cue"
version = "0.1.0"
description = "A description of package."
authors = [
    { name = "Zhaolong Zhong", email = "hello@example.com" }
]
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "anthropic==0.37.0",
    "openai==1.52.0",
    "tiktoken>=0.8.0",
    "groq==0.9.0",
    "google-auth==2.31.0",
    "google-auth-oauthlib==1.2.1",
    "google-api-python-client==2.137.0",
    "requests==2.32.3",
    "python-dotenv==1.0.0",
    "pydantic==2.7.0",
    "pydantic-settings==2.2.1",
    "sqlalchemy==2.0.30",
    "psycopg2-binary==2.9.9",
    "greenlet>=3.1.1",
    "asyncpg==0.29.0",
    "rich==13.7.1",
    "blobfile==2.1.1",
    "pytest-asyncio==0.23.7",
    "bs4==0.0.1",
    "duckduckgo-search==6.1.12",
    "pypdf==4.3.1",
    "docker>=7.1",
    "tqdm>=4.66.5",
]

[project.scripts]
cue = "cue.cli:main"

[tool.rye]
managed = true
dev-dependencies = [
    "pyright>=1.1.370",
    "mypy>=1.10.1",
    "ruff>=0.5.0",
    "pytest",
    "pytest-asyncio",
]

[tool.rye.scripts]
format = { chain = ["format:ruff", "fix:ruff"] }
"format:black" = "black ."
"format:ruff" = "ruff format ."
"format:isort" = "isort ."

lint = { chain = ["check:ruff"] }
"check:ruff" = "ruff check ."
"fix:ruff" = "ruff check --fix ."
test = "pytest"

[tool.black]
line-length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--tb=short"
xfail_strict = true
asyncio_mode = "auto"
filterwarnings = [
    "error"
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
line-length = 120
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B006",  # mutable defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "B024",  # Allow an abstract base class has no abstract methods
    "UP007",  # Ignore use of `X | Y` for type annotations
    "UP006",  # Ignore use of Dict
    "UP035",  # Ignore use of Dict or List
    "UP038",  # Ignore (X, Y)
]

[tool.ruff.format]
docstring-code-format = true

# Configure setuptools to include package data
[tool.setuptools]
packages = { find = { where = ["src"] } }

# Specify package data using setuptools
[tool.setuptools.package-data]
"cue" = ["tools/*.json"]
